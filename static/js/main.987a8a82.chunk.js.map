{"version":3,"sources":["components/Counter.tsx","App.tsx","index.tsx"],"names":["Counter","props","count","addOne","add100","increase","type","onClick","className","App","state","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAUaA,EAA2B,SAACC,GACvC,IACEC,EACED,EADFC,MAAOC,EACLF,EADKE,OAAQC,EACbH,EADaG,OAAQC,EACrBJ,EADqBI,SAGzB,OACE,qCACE,8CAAeH,KACf,wBACEI,KAAK,SACLC,QAASJ,EACTK,UAAU,SAHZ,mBAOA,wBACEF,KAAK,SACLC,QAASH,EACTI,UAAU,SAHZ,qBAOA,wBACEF,KAAK,SACLC,QAASF,EACTG,UAAU,SAHZ,0BCkBSC,E,4MA1CbC,MAAe,CACbR,MAAO,G,EAGTC,OAAS,WACP,EAAKQ,UAAS,SAACD,GAAD,MAAY,CACxBR,MAAOQ,EAAMR,MAAQ,O,EAIzBE,OAAS,WACP,EAAKO,UAAS,SAACD,GAAD,MAAY,CACxBR,MAAOQ,EAAMR,MAAQ,S,EAIzBG,SAAW,WACT,IAAQH,EAAU,EAAKQ,MAAfR,MAEJA,EAAQ,IAAM,GAAKA,EAAQ,GAC7B,EAAKE,SAGP,EAAKD,U,4CAGP,WACE,IAAQD,EAAUU,KAAKF,MAAfR,MAER,OACE,qBAAKM,UAAU,MAAf,SACE,cAAC,EAAD,CACEN,MAAOA,EACPC,OAAQS,KAAKT,OACbC,OAAQQ,KAAKR,OACbC,SAAUO,KAAKP,iB,GApCPQ,IAAMC,WCJxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.987a8a82.chunk.js","sourcesContent":["import React from 'react';\nimport './Counter.scss';\n\ntype Props = {\n  count: number;\n  addOne: () => void;\n  add100: () => void;\n  increase: () => void;\n};\n\nexport const Counter: React.FC<Props> = (props) => {\n  const {\n    count, addOne, add100, increase,\n  } = props;\n\n  return (\n    <>\n      <h1>{`Count: ${count}`}</h1>\n      <button\n        type=\"button\"\n        onClick={addOne}\n        className=\"button\"\n      >\n        Add 1\n      </button>\n      <button\n        type=\"button\"\n        onClick={add100}\n        className=\"button\"\n      >\n        Add 100\n      </button>\n      <button\n        type=\"button\"\n        onClick={increase}\n        className=\"button\"\n      >\n        Increase\n      </button>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './components/Counter';\n\ntype State = {\n  count: number,\n};\nclass App extends React.Component<{}, State> {\n  state: State = {\n    count: 0,\n  };\n\n  addOne = () => {\n    this.setState((state) => ({\n      count: state.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState((state) => ({\n      count: state.count + 100,\n    }));\n  };\n\n  increase = () => {\n    const { count } = this.state;\n\n    if (count % 5 === 0 && count > 0) {\n      this.add100();\n    }\n\n    this.addOne();\n  };\n\n  render() {\n    const { count } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Counter\n          count={count}\n          addOne={this.addOne}\n          add100={this.add100}\n          increase={this.increase}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}